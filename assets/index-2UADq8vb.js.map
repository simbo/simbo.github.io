{"version":3,"mappings":"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","names":["ColorThemeValue","DEFAULT_COLOR_THEME_VALUE","COLOR_THEME_STORAGE_KEY","userPrefersColorScheme","scheme","initialize","storedTheme","theme","setTheme","toggle","matches","ColorTheme","SVG_ICON_CACHE","ICON_NAME_ATTRIBUTE","SvgIcon","attribute","_oldValue","value","iconName","svg","importedIcon","__variableDynamicImportRuntimeHelper","ColorThemeToggle","button","event","colorTheme","QUOTES","unquote","input","i","quote","RX_PARTIAL","RX_OPTION_PREFIX","RX_SINGLE_CHAR_OPTION_WITH_VALUE","RX_SINGLE_CHAR_OPTIONS","RX_OPTION","parseParameters","parsedParameters","partials","match","partial","chars","j","option","COMMAND_HANDLER_CACHE","COMMAND_ALIASES","BUILTIN_COMMAND_HANDLERS","RX_COMMAND","getCommandHandler","command","handler","COMMAND_HISTORY_STORAGE_KEY","CommandHistory","history","ID_COUNTER","CommandPrompt","content","type","outputElement","commandLength","parameters","error","parametersString","STOPPED_TYPING_EVENT_NAME","DEFAULT_TYPE_DELAY","HAS_CURSOR_CLASSNAME","RX_CODE_SPAN","RX_CODE","RX_BREAK","TypedText","line","_match","code","output","pauseDuration","stopAfterwards","shiftContent","start","shiftToOutput","length","addStep","step","nextChar","codeMatch","delimiterPosition","breakMatch","callback","duration","INITIAL_CONTENT_CLASS","ADDITIONAL_CONTENT_CLASS","typedText","onStopTyping","onClickContinue"],"sources":["../../src/lib/color-theme.ts","../../src/components/svg-icon/svg-icon.ts","../../src/components/color-theme-toggle/color-theme-toggle.ts","../../src/lib/unquote.ts","../../src/lib/parse-parameters.ts","../../src/components/command-prompt/command-handlers.ts","../../src/components/command-prompt/command-history.ts","../../src/components/command-prompt/command-prompt.ts","../../src/components/typed-text/typed-text.ts","../../src/components/index.ts","../../src/index.ts"],"sourcesContent":["export enum ColorThemeValue {\n  Light = 'light',\n  Dark = 'dark'\n}\n\nconst DEFAULT_COLOR_THEME_VALUE = ColorThemeValue.Light;\nconst COLOR_THEME_STORAGE_KEY = 'color-theme';\n\nfunction userPrefersColorScheme(scheme: 'light' | 'dark'): boolean {\n  return window.matchMedia(`(prefers-color-scheme: ${scheme})`).matches;\n}\n\nfunction initialize(): void {\n  const storedTheme = window.localStorage.getItem(COLOR_THEME_STORAGE_KEY);\n  let theme: string | undefined;\n  if (storedTheme) {\n    theme = storedTheme;\n  } else if (userPrefersColorScheme(ColorThemeValue.Dark)) {\n    theme = ColorThemeValue.Dark;\n  } else if (userPrefersColorScheme(ColorThemeValue.Light)) {\n    theme = ColorThemeValue.Light;\n  } else {\n    theme = DEFAULT_COLOR_THEME_VALUE;\n  }\n  setTheme(theme);\n}\n\nfunction setTheme(theme?: string): void {\n  const themeValues = Object.values(ColorThemeValue);\n  if (!themeValues.includes(theme as ColorThemeValue)) {\n    return;\n  }\n  document.documentElement.dataset.colorTheme = theme;\n  window.localStorage.setItem(COLOR_THEME_STORAGE_KEY, theme as string);\n}\n\nfunction toggle(): void {\n  setTheme(\n    document.documentElement.dataset.colorTheme === ColorThemeValue.Dark ? ColorThemeValue.Light : ColorThemeValue.Dark\n  );\n}\n\nwindow\n  .matchMedia('(prefers-color-scheme: dark)')\n  .addEventListener('change', ({ matches }) => setTheme(matches ? ColorThemeValue.Dark : ColorThemeValue.Light));\n\nexport const ColorTheme = {\n  initialize,\n  toggle,\n  get theme(): string {\n    return (document.documentElement.dataset.colorTheme as ColorThemeValue) || DEFAULT_COLOR_THEME_VALUE;\n  },\n  set theme(theme: string) {\n    setTheme(theme);\n  }\n};\n","const SVG_ICON_CACHE = new Map<string, string>();\n\nexport const ICON_NAME_ATTRIBUTE = 'icon-name';\nexport class SvgIcon extends HTMLElement {\n  public static observedAttributes = [ICON_NAME_ATTRIBUTE];\n\n  public constructor() {\n    super();\n  }\n\n  public attributeChangedCallback(attribute: string, _oldValue: string, value: string): void {\n    if (attribute === ICON_NAME_ATTRIBUTE) {\n      this.setIcon(value);\n    }\n  }\n\n  private setIcon(iconName: string) {\n    if (typeof iconName !== 'string' || iconName.length === 0) {\n      return;\n    }\n    this.getIcon(iconName).then(svg => {\n      this.innerHTML = svg;\n    });\n  }\n\n  private async getIcon(iconName: string): Promise<string> {\n    if (!SVG_ICON_CACHE.has(iconName)) {\n      const { default: importedIcon } = await import(`./svg-icons/${iconName}.ts`);\n      SVG_ICON_CACHE.set(iconName, importedIcon);\n    }\n    const icon = SVG_ICON_CACHE.get(iconName) as string;\n    return icon;\n  }\n}\n","import { ColorTheme, ColorThemeValue } from '../../lib/color-theme';\nimport { ICON_NAME_ATTRIBUTE, SvgIcon } from '../svg-icon/svg-icon';\n\nexport class ColorThemeToggle extends HTMLElement {\n  private svgIcon!: SvgIcon;\n\n  public connectedCallback(): void {\n    const button = document.createElement('button') as HTMLButtonElement;\n    button.setAttribute('title', 'Toggle Color Theme');\n    button.addEventListener('click', (event: Event) => {\n      event.preventDefault();\n      ColorTheme.toggle();\n    });\n\n    this.svgIcon = document.createElement('svg-icon') as SvgIcon;\n    this.svgIcon.classList.add('as-block');\n\n    this.setIconNameByColorTheme();\n\n    const observer = new MutationObserver(() => this.setIconNameByColorTheme());\n    observer.observe(document.documentElement, {\n      attributeFilter: ['data-color-theme']\n    });\n\n    this.append(button);\n    button.append(this.svgIcon);\n  }\n\n  private setIconNameByColorTheme(): void {\n    const colorTheme = document.documentElement.dataset.colorTheme as string;\n    const iconName = {\n      [ColorThemeValue.Light]: 'moon',\n      [ColorThemeValue.Dark]: 'sun'\n    }[colorTheme];\n    if (iconName && iconName.length > 0) {\n      this.svgIcon.setAttribute(ICON_NAME_ATTRIBUTE, iconName as string);\n    }\n  }\n}\n","const QUOTES = ['\"', \"'\"];\n\nexport function unquote(input: string): string {\n  for (let i = 0; i < QUOTES.length; i++) {\n    const quote = QUOTES[i];\n    if (input.at(0) === quote && input.at(-1) === quote) {\n      return input.slice(1, -1).replaceAll(new RegExp(`\\\\\\\\${quote}`, 'g'), quote);\n    }\n  }\n  return input;\n}\n","import { unquote } from './unquote';\n\nexport interface ParsedParametersOptions {\n  [key: string]: boolean | string;\n}\n\nexport interface ParsedParameters {\n  inputs: string[];\n  options: ParsedParametersOptions;\n}\n\nconst RX_PARTIAL = /^(--?[^\\s\"']+=)?(\"(\\\\\"|[^\"])*\"|'(\\\\'|[^'])*'|\\S+)/;\nconst RX_OPTION_PREFIX = /^--?\\S/;\nconst RX_SINGLE_CHAR_OPTION_WITH_VALUE = /^-[a-z]=/i;\nconst RX_SINGLE_CHAR_OPTIONS = /^-[a-z]+$/i;\nconst RX_OPTION = /^--[a-z][\\da-z]*([_-][a-z][\\da-z]*)*/i;\n\nexport function parseParameters(input: string): ParsedParameters {\n  input = input.trim();\n  const parsedParameters: ParsedParameters = { inputs: [], options: {} };\n  const partials: string[] = [];\n  let match: RegExpMatchArray | null = null;\n  while (input.length > 0) {\n    const partial = (match = input.match(RX_PARTIAL)) === null ? input : match[0];\n    partials.push(partial);\n    input = input.slice(partial.length).trim();\n  }\n  for (let i = 0; i < partials.length; i++) {\n    const partial = partials[i].trim();\n    if (RX_OPTION_PREFIX.test(partial)) {\n      if ((match = partial.match(RX_SINGLE_CHAR_OPTION_WITH_VALUE))) {\n        parsedParameters.options[partial.charAt(1).toLowerCase()] = unquote(partial.slice(3));\n      } else if ((match = partial.match(RX_SINGLE_CHAR_OPTIONS))) {\n        const chars = [...match[0].slice(1).toLowerCase()];\n        for (let j = 0; j < chars.length; j++) {\n          parsedParameters.options[chars[j]] = true;\n        }\n      } else if ((match = partial.match(RX_OPTION))) {\n        const option = partial.slice(2, match[0].length).toLowerCase();\n        const value = partial.charAt(match[0].length) === '=' ? unquote(partial.slice(match[0].length + 1)) : true;\n        parsedParameters.options[option] = value;\n      }\n    } else {\n      parsedParameters.inputs.push(unquote(partial));\n    }\n  }\n  return parsedParameters;\n}\n","import { CommandHandler } from './command-prompt.types';\n\nconst COMMAND_HANDLER_CACHE = new Map<string, CommandHandler>();\n\nexport const COMMAND_ALIASES: { [alias: string]: string } = {\n  cls: 'clear',\n  hey: 'hello',\n  hi: 'hello',\n  max: 'maximize',\n  min: 'minimize',\n  print: 'echo',\n  theme: 'color-theme'\n};\n\nconst BUILTIN_COMMAND_HANDLERS: { [command: string]: CommandHandler } = {\n  foo: 'bar',\n  version: `v${SITE_VERSION}`,\n  test: 'test passed.',\n  help: 'need help?<br/>run <span class=\"yellow\">commands</span> for a list of commands.'\n};\n\nconst RX_COMMAND = /^[a-z][\\da-z]*(-[a-z][\\da-z]*)*$/i;\n\nexport async function getCommandHandler(command: string): Promise<CommandHandler> {\n  if (!RX_COMMAND.test(command)) {\n    throw new Error(`invalid command: ${command}`);\n  }\n  command = command.toLowerCase();\n  command = COMMAND_ALIASES[command] || command;\n  if (BUILTIN_COMMAND_HANDLERS[command]) {\n    return BUILTIN_COMMAND_HANDLERS[command];\n  }\n  if (!COMMAND_HANDLER_CACHE.has(command)) {\n    let handler: CommandHandler;\n    try {\n      handler = (await import(`./command-handlers/${command}.ts`)).default;\n    } catch {\n      throw new Error(`unknown command: ${command}`);\n    }\n    COMMAND_HANDLER_CACHE.set(command, handler);\n  }\n  return COMMAND_HANDLER_CACHE.get(command) as CommandHandler;\n}\n","const COMMAND_HISTORY_STORAGE_KEY = 'command-history';\n\nexport class CommandHistory {\n  private readonly history: string[];\n  private index = -1;\n\n  constructor() {\n    let history: string[];\n    try {\n      history = JSON.parse(window.localStorage.getItem(COMMAND_HISTORY_STORAGE_KEY) || '[]');\n    } catch {\n      history = [];\n    }\n    this.history = Array.isArray(history) ? history : [];\n  }\n\n  public add(command: string): void {\n    this.index = -1;\n    command = command.trim();\n    if (this.history[0] !== command) {\n      this.history.unshift(command);\n      window.localStorage.setItem(COMMAND_HISTORY_STORAGE_KEY, JSON.stringify(this.history));\n    }\n  }\n\n  public backward(): string | undefined {\n    if (this.index + 1 < this.history.length) {\n      this.index++;\n      return this.history[this.index];\n    }\n  }\n\n  public forward(): string | undefined {\n    if (this.index - 1 >= -1) {\n      this.index--;\n      return this.index === -1 ? '' : this.history[this.index];\n    }\n  }\n}\n","import { parseParameters } from '../../lib/parse-parameters';\n\nimport { getCommandHandler } from './command-handlers';\nimport { CommandHistory } from './command-history';\nimport { CommandOutput } from './command-prompt.types';\n\nlet ID_COUNTER = 0;\n\nexport class CommandPrompt extends HTMLElement {\n  private readonly promptElement = document.createElement('div');\n  private readonly labelElement = document.createElement('label');\n  private readonly inputElement = document.createElement('input');\n  public readonly outputsElement = document.createElement('div');\n  private readonly history = new CommandHistory();\n  private readonly inputId = `prompt-input${++ID_COUNTER}`;\n\n  public constructor() {\n    super();\n  }\n\n  public connectedCallback(): void {\n    this.promptElement.classList.add('prompt');\n    this.labelElement.classList.add('prompt-label');\n    this.labelElement.setAttribute('for', this.inputId);\n\n    this.inputElement.classList.add('prompt-input');\n    this.inputElement.id = this.inputId;\n    this.inputElement.type = 'text';\n    this.inputElement.addEventListener('keypress', event => this.onPromptKeyPress(event));\n    this.inputElement.addEventListener('keydown', event => this.onPromptKeyDown(event));\n\n    this.append(this.outputsElement);\n    this.promptElement.append(this.labelElement);\n    this.promptElement.append(this.inputElement);\n    this.append(this.promptElement);\n  }\n\n  public outputText(content: string) {\n    this.addOutput({ type: 'text', content });\n  }\n\n  private addOutput({ type, content }: CommandOutput): void {\n    const outputElement = document.createElement('div');\n    outputElement.classList.add('output', `is-${type}`);\n    if (type === 'text') outputElement.innerHTML = content;\n    else outputElement.textContent = content;\n    this.outputsElement.append(outputElement);\n    this.inputElement.scrollIntoView();\n  }\n\n  private onPromptKeyPress(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const command = this.inputElement.value;\n      this.inputElement.value = '';\n      this.parseInput(command);\n    }\n  }\n\n  private onPromptKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      let command: string | undefined;\n      if (event.key === 'ArrowUp') {\n        command = this.history.backward();\n      } else if (event.key === 'ArrowDown') {\n        command = this.history.forward();\n      }\n      if (typeof command === 'string') {\n        event.preventDefault();\n        this.inputElement.value = command;\n      }\n    }\n  }\n\n  private parseInput(input: string): void {\n    input = input.trim();\n    let commandLength = input.search(/\\s|$/);\n    commandLength = commandLength > 0 ? commandLength : input.length;\n    const command = input.slice(0, commandLength);\n    if (command.length === 0) return;\n    const parameters = input.slice(commandLength).trim();\n    this.runCommand(command, parameters).catch(error =>\n      this.addOutput({ type: 'error', content: `${error.message || error}` })\n    );\n  }\n\n  private async runCommand(command: string, parametersString: string): Promise<void> {\n    const parameters = parseParameters(parametersString);\n    const input = `${command}${parametersString.length > 0 ? ` ${parametersString}` : ''}`;\n    this.addOutput({\n      type: 'command',\n      content: input\n    });\n    this.history.add(input);\n    const handler = await getCommandHandler(command);\n    if (typeof handler === 'string') return this.outputText(handler);\n    return handler(this, parameters);\n  }\n}\n","interface Step {\n  pauseDuration: number;\n  output: string;\n  stopAfterwards?: boolean;\n}\n\nexport const STOPPED_TYPING_EVENT_NAME = 'stopped-typing';\n\nconst DEFAULT_TYPE_DELAY = 23;\n\nconst HAS_CURSOR_CLASSNAME = 'has-cursor';\n\nconst RX_CODE_SPAN = /<span\\s+code=\"(\\d+|stop)\"[^>]*><\\/span>/gi;\nconst RX_CODE = /^\\^(\\d+|stop)/i;\nconst RX_BREAK = /^<br\\s*\\/?>/i;\n\nexport class TypedText extends HTMLElement {\n  // queue of text/html strings to set as innerHtml\n  private steps: Step[] = [];\n\n  // next output queue index\n  private nextStep = 0;\n\n  // base pause duration between each typed character\n  private typeDelay!: number;\n\n  // timeout reference for pause timeout\n  private typeTimeout = 0;\n\n  public constructor() {\n    super();\n  }\n\n  public connectedCallback(): void {\n    this.typeDelay = Number.parseInt(this.getAttribute('type-delay') || '0', 10) || DEFAULT_TYPE_DELAY;\n    const content = this.innerHTML;\n    this.innerHTML = '';\n    this.queueContent(content);\n    this.startTyping();\n  }\n\n  public startTyping(): void {\n    this.type();\n  }\n\n  public queueContent(content: string): void {\n    content = content\n      .split(/[\\n\\r]+/g)\n      .map(line => line.trim())\n      .join('')\n      .replaceAll(RX_CODE_SPAN, (_match, code) => `^${code}`);\n\n    let output = this.steps.at(-1)?.output || '';\n    let pauseDuration = 0;\n    let stopAfterwards = false;\n\n    const shiftContent = (start: number): void => {\n      content = content.slice(start);\n    };\n\n    const shiftToOutput = (length: number): void => {\n      output += content.slice(0, length);\n      shiftContent(length);\n    };\n\n    const addStep = () => {\n      const step: Step = { pauseDuration, output };\n      if (stopAfterwards) {\n        step.stopAfterwards = stopAfterwards;\n      }\n      this.steps.push(step);\n      pauseDuration = 0;\n      stopAfterwards = false;\n    };\n\n    while (content.length > 0) {\n      const nextChar = content.charAt(0);\n      let codeMatch: RegExpMatchArray | null = null;\n      let delimiterPosition: number;\n      if (nextChar === '^' && (codeMatch = content.match(RX_CODE))) {\n        if (codeMatch[0].toLowerCase() === '^stop') {\n          stopAfterwards = true;\n        } else {\n          pauseDuration += Number.parseInt(codeMatch[0].slice(1), 10);\n        }\n        shiftContent(codeMatch[0].length);\n      } else if (nextChar === '<') {\n        let breakMatch: RegExpMatchArray | null = null;\n        if ((breakMatch = content.match(RX_BREAK))) {\n          shiftToOutput(breakMatch[0].length);\n          addStep();\n        } else if ((delimiterPosition = content.indexOf('>')) >= 0) {\n          shiftToOutput(delimiterPosition + 1);\n        }\n      } else if (nextChar === '&' && (delimiterPosition = content.indexOf(';')) >= 0) {\n        shiftToOutput(delimiterPosition + 1);\n      } else {\n        shiftToOutput(1);\n        addStep();\n      }\n    }\n  }\n\n  private type(): void {\n    this.classList.add(HAS_CURSOR_CLASSNAME);\n    const step = this.steps[this.nextStep];\n    this.setTimeout(() => {\n      this.innerHTML = step.output;\n      this.nextStep++;\n      if (!step.stopAfterwards && this.nextStep < this.steps.length) {\n        this.setTimeout(() => this.type(), this.humanizedDelay);\n      } else {\n        this.clearTimeout();\n        this.classList.remove(HAS_CURSOR_CLASSNAME);\n        this.dispatchEvent(new CustomEvent(STOPPED_TYPING_EVENT_NAME));\n      }\n    }, step.pauseDuration);\n  }\n\n  private get humanizedDelay(): number {\n    return (Math.random() * this.typeDelay - Math.random() * this.typeDelay) / 2 + this.typeDelay;\n  }\n\n  private setTimeout(callback: () => void, duration = 0): void {\n    this.typeTimeout = window.setTimeout(callback, duration);\n  }\n\n  private clearTimeout(): void {\n    if (this.typeTimeout) {\n      window.clearTimeout(this.typeTimeout);\n    }\n  }\n}\n","import { ColorThemeToggle } from './color-theme-toggle/color-theme-toggle';\nimport { CommandPrompt } from './command-prompt/command-prompt';\nimport { SvgIcon } from './svg-icon/svg-icon';\nimport { TypedText } from './typed-text/typed-text';\n\ncustomElements.define('svg-icon', SvgIcon);\ncustomElements.define('typed-text', TypedText);\ncustomElements.define('color-theme-toggle', ColorThemeToggle);\ncustomElements.define('command-prompt', CommandPrompt);\n","import './index.scss';\nimport './components';\n\nimport { STOPPED_TYPING_EVENT_NAME, TypedText } from './components/typed-text/typed-text';\nimport { ColorTheme } from './lib/color-theme';\n\nColorTheme.initialize();\n\nconst INITIAL_CONTENT_CLASS = 'has-initial-content';\nconst ADDITIONAL_CONTENT_CLASS = 'has-additional-content';\n\nconst typedText = document.querySelector('typed-text') as TypedText;\n\nconst onStopTyping = () => {\n  typedText.removeEventListener(STOPPED_TYPING_EVENT_NAME, onStopTyping);\n  typedText.classList.add(INITIAL_CONTENT_CLASS);\n  typedText.after(document.createElement('command-prompt'));\n};\n\nconst onClickContinue = (event: Event) => {\n  if ((event.target as HTMLElement).tagName === 'BUTTON') {\n    event.preventDefault();\n    if (typedText.classList.contains(INITIAL_CONTENT_CLASS)) {\n      typedText.classList.add(ADDITIONAL_CONTENT_CLASS);\n      typedText.classList.remove(INITIAL_CONTENT_CLASS);\n      typedText.startTyping();\n    }\n  }\n};\n\ntypedText.addEventListener(STOPPED_TYPING_EVENT_NAME, onStopTyping);\ntypedText.addEventListener('click', onClickContinue);\n"],"file":"assets/index-2UADq8vb.js"}