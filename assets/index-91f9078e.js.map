{"version":3,"mappings":"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","names":["ColorThemeValue","DEFAULT_COLOR_THEME_VALUE","userPrefersColorScheme","scheme","initialize","theme","setTheme","themeValues","toggle","matches","ColorTheme","svgIconCache","ICON_NAME_ATTRIBUTE","SvgIcon","attribute","_oldIconName","iconName","svg","importedIcon","__variableDynamicImportRuntimeHelper","ColorThemeToggle","button","event","colorTheme","STOPPED_TYPING_EVENT_NAME","DEFAULT_TYPE_DELAY","RX_CODE_SPAN","RX_CODE","RX_BREAK","TypedText","content","line","_match","code","output","pauseDuration","stopAfterwards","shiftContent","start","shiftToOutput","length","addStep","step","nextChar","codeMatch","delimiterPosition","breakMatch","callback","duration","INITIAL_CONTENT_CLASS","ADDITIONAL_CONTENT_CLASS","typedText","onStopTyping","onClickLink"],"sources":["../../src/lib/color-theme.ts","../../src/components/svg-icon/svg-icon.ts","../../src/components/color-theme-toggle/color-theme-toggle.ts","../../src/components/typed-text/typed-text.ts","../../src/components/index.ts","../../src/index.ts"],"sourcesContent":["export enum ColorThemeValue {\n  Light = 'light',\n  Dark = 'dark'\n}\n\nconst DEFAULT_COLOR_THEME_VALUE = ColorThemeValue.Light;\n\nfunction userPrefersColorScheme(scheme: 'light' | 'dark'): boolean {\n  return window.matchMedia(`(prefers-color-scheme: ${scheme})`).matches;\n}\n\nfunction initialize(): ColorThemeValue {\n  let theme: string | undefined;\n  if (userPrefersColorScheme(ColorThemeValue.Dark)) {\n    theme = ColorThemeValue.Dark;\n  } else if (userPrefersColorScheme(ColorThemeValue.Light)) {\n    theme = ColorThemeValue.Light;\n  }\n  return setTheme(theme);\n}\n\nfunction setTheme(theme?: string): ColorThemeValue {\n  const themeValues = Object.values(ColorThemeValue);\n  if (typeof theme !== 'string' || !themeValues.includes(theme as ColorThemeValue)) {\n    theme = DEFAULT_COLOR_THEME_VALUE;\n  }\n  document.documentElement.dataset.colorTheme = theme;\n  return theme as ColorThemeValue;\n}\n\nfunction toggle(): ColorThemeValue {\n  return setTheme(\n    document.documentElement.dataset.colorTheme === ColorThemeValue.Dark ? ColorThemeValue.Light : ColorThemeValue.Dark\n  );\n}\n\nwindow\n  .matchMedia('(prefers-color-scheme: dark)')\n  .addEventListener('change', ({ matches }) => setTheme(matches ? ColorThemeValue.Dark : ColorThemeValue.Light));\n\nexport const ColorTheme = {\n  initialize,\n  toggle,\n  get theme(): ColorThemeValue {\n    return (document.documentElement.dataset.colorTheme as ColorThemeValue) || DEFAULT_COLOR_THEME_VALUE;\n  },\n  set theme(theme: ColorThemeValue) {\n    setTheme(theme);\n  }\n};\n","const svgIconCache = new Map<string, string>();\n\nexport const ICON_NAME_ATTRIBUTE = 'icon-name';\nexport class SvgIcon extends HTMLElement {\n  public static observedAttributes = [ICON_NAME_ATTRIBUTE];\n\n  public constructor() {\n    super();\n  }\n\n  public attributeChangedCallback(attribute: string, _oldIconName: string, iconName: string): void {\n    if (attribute === ICON_NAME_ATTRIBUTE) {\n      this.setIcon(iconName);\n    }\n  }\n\n  private setIcon(iconName: string) {\n    if (typeof iconName !== 'string' || iconName.length === 0) {\n      return;\n    }\n    this.getIcon(iconName).then(svg => {\n      this.innerHTML = svg;\n    });\n  }\n\n  private async getIcon(iconName: string): Promise<string> {\n    if (!svgIconCache.has(iconName)) {\n      const { default: importedIcon } = await import(`./svg-icons/${iconName}.ts`);\n      svgIconCache.set(iconName, importedIcon);\n    }\n    const icon = svgIconCache.get(iconName) as string;\n    return icon;\n  }\n}\n","import { ColorTheme, ColorThemeValue } from '../../lib/color-theme';\nimport { ICON_NAME_ATTRIBUTE, SvgIcon } from '../svg-icon/svg-icon';\n\nexport class ColorThemeToggle extends HTMLElement {\n  private svgIcon!: SvgIcon;\n\n  public connectedCallback(): void {\n    const button = document.createElement('button') as HTMLButtonElement;\n    button.addEventListener('click', (event: Event) => {\n      event.preventDefault();\n      ColorTheme.toggle();\n    });\n\n    this.svgIcon = document.createElement('svg-icon') as SvgIcon;\n    this.svgIcon.classList.add('as-block');\n\n    this.setIconNameByColorTheme();\n\n    const observer = new MutationObserver(() => this.setIconNameByColorTheme());\n    observer.observe(document.documentElement, {\n      attributeFilter: ['data-color-theme']\n    });\n\n    this.append(button);\n    button.append(this.svgIcon);\n  }\n\n  private setIconNameByColorTheme(): void {\n    const colorTheme = document.documentElement.dataset.colorTheme as string;\n    const iconName = {\n      [ColorThemeValue.Light]: 'moon',\n      [ColorThemeValue.Dark]: 'sun'\n    }[colorTheme];\n    if (iconName && iconName.length > 0) {\n      this.svgIcon.setAttribute(ICON_NAME_ATTRIBUTE, iconName as string);\n    }\n  }\n}\n","interface Step {\n  pauseDuration: number;\n  output: string;\n  stopAfterwards?: boolean;\n}\n\nexport const STOPPED_TYPING_EVENT_NAME = 'stopped-typing';\n\nconst DEFAULT_TYPE_DELAY = 23;\n\nconst RX_CODE_SPAN = /<span\\s+code=\"(\\d+|stop)\"[^>]*><\\/span>/gi;\nconst RX_CODE = /^\\^(\\d+|stop)/i;\nconst RX_BREAK = /^<br\\s*\\/?>/i;\n\nexport class TypedText extends HTMLElement {\n  // queue of text/html strings to set as innerHtml\n  private steps: Step[] = [];\n\n  // next output queue index\n  private nextStep = 0;\n\n  // base pause duration between each typed character\n  private typeDelay!: number;\n\n  // timeout reference for pause timeout\n  private typeTimeout = 0;\n\n  public constructor() {\n    super();\n  }\n\n  public connectedCallback(): void {\n    this.typeDelay = Number.parseInt(this.getAttribute('type-delay') || '0', 10) || DEFAULT_TYPE_DELAY;\n    const content = this.innerHTML;\n    this.innerHTML = '';\n    this.queueContent(content);\n    this.startTyping();\n  }\n\n  public startTyping(): void {\n    this.type();\n  }\n\n  public queueContent(content: string): void {\n    content = content\n      .split(/[\\n\\r]+/g)\n      .map(line => line.trim())\n      .join('')\n      .replaceAll(RX_CODE_SPAN, (_match, code) => `^${code}`);\n\n    let output = this.steps.at(-1)?.output || '';\n    let pauseDuration = 0;\n    let stopAfterwards = false;\n\n    const shiftContent = (start: number): void => {\n      content = content.slice(start);\n    };\n\n    const shiftToOutput = (length: number): void => {\n      output += content.slice(0, length);\n      shiftContent(length);\n    };\n\n    const addStep = () => {\n      const step: Step = { pauseDuration, output };\n      if (stopAfterwards) {\n        step.stopAfterwards = stopAfterwards;\n      }\n      this.steps.push(step);\n      pauseDuration = 0;\n      stopAfterwards = false;\n    };\n\n    while (content.length > 0) {\n      const nextChar = content.charAt(0);\n      let codeMatch: RegExpMatchArray | null = null;\n      let delimiterPosition: number;\n      if (nextChar === '^' && (codeMatch = content.match(RX_CODE))) {\n        if (codeMatch[0].toLowerCase() === '^stop') {\n          stopAfterwards = true;\n        } else {\n          pauseDuration += Number.parseInt(codeMatch[0].slice(1), 10);\n        }\n        shiftContent(codeMatch[0].length);\n      } else if (nextChar === '<') {\n        let breakMatch: RegExpMatchArray | null = null;\n        if ((breakMatch = content.match(RX_BREAK))) {\n          shiftToOutput(breakMatch[0].length);\n          addStep();\n        } else if ((delimiterPosition = content.indexOf('>')) >= 0) {\n          shiftToOutput(delimiterPosition + 1);\n        }\n      } else if (nextChar === '&' && (delimiterPosition = content.indexOf(';')) >= 0) {\n        shiftToOutput(delimiterPosition + 1);\n      } else {\n        shiftToOutput(1);\n        addStep();\n      }\n    }\n  }\n\n  private type(): void {\n    const step = this.steps[this.nextStep];\n    this.setTimeout(() => {\n      this.innerHTML = step.output;\n      this.nextStep++;\n      if (!step.stopAfterwards && this.nextStep < this.steps.length) {\n        this.setTimeout(() => this.type(), this.humanizedDelay);\n      } else {\n        this.clearTimeout();\n        this.dispatchEvent(new CustomEvent(STOPPED_TYPING_EVENT_NAME));\n      }\n    }, step.pauseDuration);\n  }\n\n  private get humanizedDelay(): number {\n    return (Math.random() * this.typeDelay - Math.random() * this.typeDelay) / 2 + this.typeDelay;\n  }\n\n  private setTimeout(callback: () => void, duration = 0): void {\n    this.typeTimeout = window.setTimeout(callback, duration);\n  }\n\n  private clearTimeout(): void {\n    if (this.typeTimeout) {\n      window.clearTimeout(this.typeTimeout);\n    }\n  }\n}\n","import { ColorThemeToggle } from './color-theme-toggle/color-theme-toggle';\nimport { SvgIcon } from './svg-icon/svg-icon';\nimport { TypedText } from './typed-text/typed-text';\n\ncustomElements.define('svg-icon', SvgIcon);\ncustomElements.define('typed-text', TypedText);\ncustomElements.define('color-theme-toggle', ColorThemeToggle);\n","import './index.scss';\nimport './components';\n\nimport { STOPPED_TYPING_EVENT_NAME, TypedText } from './components/typed-text/typed-text';\nimport { ColorTheme } from './lib/color-theme';\n\nColorTheme.initialize();\n\nconst INITIAL_CONTENT_CLASS = 'has-initial-content';\nconst ADDITIONAL_CONTENT_CLASS = 'has-additional-content';\n\nconst typedText = document.querySelector('typed-text') as TypedText;\n\nconst onStopTyping = () => {\n  typedText.removeEventListener(STOPPED_TYPING_EVENT_NAME, onStopTyping);\n  typedText.classList.add(INITIAL_CONTENT_CLASS);\n};\n\nconst onClickLink = (event: Event) => {\n  if ((event.target as HTMLElement).tagName === 'BUTTON') {\n    event.preventDefault();\n    if (typedText.classList.contains(INITIAL_CONTENT_CLASS)) {\n      typedText.classList.add(ADDITIONAL_CONTENT_CLASS);\n      typedText.classList.remove(INITIAL_CONTENT_CLASS);\n      typedText.startTyping();\n    }\n  }\n};\n\ntypedText.addEventListener(STOPPED_TYPING_EVENT_NAME, onStopTyping);\ntypedText.addEventListener('click', onClickLink);\n"],"file":"assets/index-91f9078e.js"}