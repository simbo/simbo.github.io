.terminal {
  @extend %font--mono, %material-shadow--2;
  display: block;
  position: relative;
  width: 32rem;
  max-width: 100%;
  margin: 2rem auto;
  padding: 2rem;
  background: var(--foreground-color);
  border: remPx(1) solid var(--border-color);
  border-radius: remPx(3);
  font-size: 1.2em;
  white-space: pre-wrap;
  align-self: flex-start;
  justify-self: flex-start;

  .terminal-maximized & {
    margin-top: 0;
    border-radius: 0;
    width: 100%;
    border-width: 0 0 remPx(1) 0;
  }

  @media screen and (max-width: 550px) {
    padding: 2rem 1rem;
    margin-top: 0;
    border-radius: 0;
    width: 100%;
    border-width: 0 0 remPx(1) 0;
  }

  @media screen and (max-width: 500px) {
    font-size: 1.1em;
  }
  @media screen and (max-width: 450px) {
    font-size: 1em;
  }
  @media screen and (max-width: 400px) {
    font-size: 0.9em;
  }

  &::before {
    @extend %material-shadow--2;
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    width: 2.3em;
    height: 2.3em;
    background: url('/simbo-avatar-tiny.png') center center no-repeat;
    background-size: contain;
    border-radius: 50%;
    border: remPx(1) solid var(--border-color);
    transform: translate(23%, -23%);

    .terminal-maximized & {
      transform: translate(-40%, 40%);
    }

    @media screen and (max-width: 550px) {
      transform: translate(-40%, 40%);
    }
  }

  .intro,
  .links {
    display: inline;
  }

  $terminalColors: black, blue, green, cyan, red, magenta, yellow, white, orange, dim;

  @each $foo in $terminalColors {
    .#{'' + $foo} {
      color: var(--terminal-#{$foo});
    }
    .bg-#{'' + $foo} {
      background-color: var(--terminal-#{$foo});
    }
  }

  .nowrap {
    white-space: nowrap;
  }

  typed-text:not(:empty) + command-prompt,
  typed-text.has-cursor:empty + command-prompt {
    margin-top: lines(1);
  }

  button {
    color: var(--terminal-magenta);
    cursor: progress;
  }

  .has-initial-content button {
    cursor: pointer;
    color: var(--terminal-blue);
    text-decoration: underline;
  }

  .has-additional-content button {
    color: inherit;
    cursor: text;
  }

  .link {
    text-decoration: none;

    &__type {
      color: var(--primary-color);

      &::after {
        content: ':';
      }
    }
    &__label {
      text-decoration: underline;
    }
  }
}
