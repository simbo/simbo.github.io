{"version":3,"mappings":"gGAAA,MAAMA,MAAqB,IAEdC,EAAsB,YAC5B,MAAMC,UAAgB,WAAY,CACvC,OAAc,mBAAqB,CAACD,CAAmB,EAEhD,aAAc,CACb,OACR,CAEO,yBAAyBE,EAAmBC,EAAmBC,EAAqB,CACrFF,IAAcF,GAChB,KAAK,QAAQI,CAAK,CAEtB,CAEQ,QAAQC,EAAkB,CAC5B,OAAOA,GAAa,UAAYA,EAAS,SAAW,GAGxD,KAAK,QAAQA,CAAQ,EAAE,KAAYC,GAAA,CACjC,KAAK,UAAYA,CAAA,CAClB,CACH,CAEA,MAAc,QAAQD,EAAmC,CACvD,GAAI,CAACN,EAAe,IAAIM,CAAQ,EAAG,CACjC,KAAM,CAAE,QAASE,GAAiB,MAAMC,2QAAA,eAAAH,CAAA,OACzBN,EAAA,IAAIM,EAAUE,CAAY,CAC3C,CAEO,OADMR,EAAe,IAAIM,CAAQ,CAE1C,CACF","names":["SVG_ICON_CACHE","ICON_NAME_ATTRIBUTE","SvgIcon","attribute","_oldValue","value","iconName","svg","importedIcon","__variableDynamicImportRuntimeHelper"],"sources":["../../src/components/svg-icon/svg-icon.ts"],"sourcesContent":["const SVG_ICON_CACHE = new Map<string, string>();\n\nexport const ICON_NAME_ATTRIBUTE = 'icon-name';\nexport class SvgIcon extends HTMLElement {\n  public static observedAttributes = [ICON_NAME_ATTRIBUTE];\n\n  public constructor() {\n    super();\n  }\n\n  public attributeChangedCallback(attribute: string, _oldValue: string, value: string): void {\n    if (attribute === ICON_NAME_ATTRIBUTE) {\n      this.setIcon(value);\n    }\n  }\n\n  private setIcon(iconName: string) {\n    if (typeof iconName !== 'string' || iconName.length === 0) {\n      return;\n    }\n    this.getIcon(iconName).then(svg => {\n      this.innerHTML = svg;\n    });\n  }\n\n  private async getIcon(iconName: string): Promise<string> {\n    if (!SVG_ICON_CACHE.has(iconName)) {\n      const { default: importedIcon } = await import(`./svg-icons/${iconName}.ts`);\n      SVG_ICON_CACHE.set(iconName, importedIcon);\n    }\n    const icon = SVG_ICON_CACHE.get(iconName) as string;\n    return icon;\n  }\n}\n"],"file":"assets/svg-icon-3P_BxEmg.js"}