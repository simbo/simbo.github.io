{"version":3,"file":"typed-text-p6mutAOn.js","sources":["../../src/components/typed-text/typed-text.ts"],"sourcesContent":["import { STARTED_TYPING_EVENT_TYPE, STOPPED_TYPING_EVENT_TYPE, STOPPER_TYPED_EVENT_TYPE } from './typed-text-events';\n\ninterface Step {\n  pauseDuration: number;\n  output: string;\n  stopAfterwards?: boolean;\n}\n\nconst DEFAULT_TYPE_DELAY = 23;\n\nconst HAS_CURSOR_CLASSNAME = 'has-cursor';\n\nconst RX_CODE_SPAN = /<span\\s+code=\"(\\d+|stop)\"[^>]*><\\/span>/gi;\nconst RX_CODE = /^\\^(\\d+|stop)/i;\nconst RX_BREAK = /^<br\\s*\\/?>/i;\n\nexport class TypedText extends HTMLElement {\n  // queue of text/html strings to set as innerHtml\n  private steps: Step[] = [];\n\n  // next output queue index\n  private nextStep = 0;\n\n  // base pause duration between each typed character\n  private typeDelay!: number;\n\n  // timeout reference for pause timeout\n  private typeTimeout = 0;\n\n  public constructor() {\n    super();\n  }\n\n  public connectedCallback(): void {\n    this.typeDelay = Number.parseInt(this.getAttribute('type-delay') || '0', 10) || DEFAULT_TYPE_DELAY;\n    // const content = this.innerHTML;\n    // this.innerHTML = '';\n    // this.queueContent(content);\n    // this.startTyping();\n  }\n\n  public startTyping(): void {\n    this.classList.add(HAS_CURSOR_CLASSNAME);\n    this.dispatchEvent(new CustomEvent(STARTED_TYPING_EVENT_TYPE));\n    this.type();\n  }\n\n  public stopTyping(): void {\n    this.clearTimeout();\n    this.classList.remove(HAS_CURSOR_CLASSNAME);\n    this.dispatchEvent(new CustomEvent(STOPPED_TYPING_EVENT_TYPE));\n  }\n\n  public resetTyping(): void {\n    this.stopTyping();\n    this.nextStep = 0;\n    this.innerHTML = '';\n  }\n\n  public restartTyping(): void {\n    this.resetTyping();\n    this.startTyping();\n  }\n\n  public get isTyping(): boolean {\n    return this.typeTimeout !== 0;\n  }\n\n  public get typingDone(): boolean {\n    return this.steps.length === this.nextStep;\n  }\n\n  public queueContent(content: string): void {\n    content = content\n      .split(/[\\n\\r]+/g)\n      .map(line => line.trim())\n      .join('')\n      .replaceAll(RX_CODE_SPAN, (_match, code) => `^${code}`);\n\n    let output = this.steps.at(-1)?.output || '';\n    let pauseDuration = 0;\n    let stopAfterwards = false;\n\n    const shiftContent = (start: number): void => {\n      content = content.slice(start);\n    };\n\n    const shiftToOutput = (length: number): void => {\n      output += content.slice(0, length);\n      shiftContent(length);\n    };\n\n    const addStep = () => {\n      const step: Step = { pauseDuration, output };\n      if (stopAfterwards) {\n        step.stopAfterwards = stopAfterwards;\n      }\n      this.steps.push(step);\n      pauseDuration = 0;\n      stopAfterwards = false;\n    };\n\n    while (content.length > 0) {\n      const nextChar = content.charAt(0);\n      let codeMatch: RegExpMatchArray | null = null;\n      let delimiterPosition: number;\n      if (nextChar === '^' && (codeMatch = content.match(RX_CODE))) {\n        if (codeMatch[0].toLowerCase() === '^stop') {\n          stopAfterwards = true;\n        } else {\n          pauseDuration += Number.parseInt(codeMatch[0].slice(1), 10);\n        }\n        shiftContent(codeMatch[0].length);\n      } else if (nextChar === '<') {\n        let breakMatch: RegExpMatchArray | null = null;\n        if ((breakMatch = content.match(RX_BREAK))) {\n          shiftToOutput(breakMatch[0].length);\n          addStep();\n        } else if ((delimiterPosition = content.indexOf('>')) >= 0) {\n          shiftToOutput(delimiterPosition + 1);\n        }\n      } else if (nextChar === '&' && (delimiterPosition = content.indexOf(';')) >= 0) {\n        shiftToOutput(delimiterPosition + 1);\n      } else {\n        shiftToOutput(1);\n        addStep();\n      }\n    }\n  }\n\n  private type(): void {\n    const step = this.steps[this.nextStep];\n    this.setTimeout(() => {\n      this.innerHTML = step.output;\n      this.nextStep++;\n      if (!step.stopAfterwards && this.nextStep < this.steps.length) {\n        this.setTimeout(() => this.type(), this.humanizedDelay);\n      } else {\n        if (step.stopAfterwards) {\n          this.dispatchEvent(new CustomEvent(STOPPER_TYPED_EVENT_TYPE));\n        }\n        this.stopTyping();\n      }\n    }, step.pauseDuration);\n  }\n\n  private get humanizedDelay(): number {\n    return (Math.random() * this.typeDelay - Math.random() * this.typeDelay) / 2 + this.typeDelay;\n  }\n\n  private setTimeout(callback: () => void, duration = 0): void {\n    this.typeTimeout = window.setTimeout(callback, duration);\n  }\n\n  private clearTimeout(): void {\n    if (this.typeTimeout) {\n      window.clearTimeout(this.typeTimeout);\n      this.typeTimeout = 0;\n    }\n  }\n}\n"],"names":["DEFAULT_TYPE_DELAY","HAS_CURSOR_CLASSNAME","RX_CODE_SPAN","RX_CODE","RX_BREAK","TypedText","STARTED_TYPING_EVENT_TYPE","STOPPED_TYPING_EVENT_TYPE","content","line","_match","code","output","pauseDuration","stopAfterwards","shiftContent","start","shiftToOutput","length","addStep","step","nextChar","codeMatch","delimiterPosition","breakMatch","STOPPER_TYPED_EVENT_TYPE","callback","duration"],"mappings":"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"}