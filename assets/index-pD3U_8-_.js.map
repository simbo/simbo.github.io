{"version":3,"mappings":"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","names":["ColorThemeValue","DEFAULT_COLOR_THEME_VALUE","COLOR_THEME_STORAGE_KEY","userPrefersColorScheme","scheme","setTheme","theme","ColorTheme","storedTheme","matches","SVG_ICON_CACHE","ICON_NAME_ATTRIBUTE","SvgIcon","attribute","_oldValue","value","iconName","svg","importedIcon","__variableDynamicImportRuntimeHelper","ColorThemeToggle","button","event","colorTheme","STOPPED_TYPING_EVENT_NAME","STARTED_TYPING_EVENT_NAME","DEFAULT_TYPE_DELAY","HAS_CURSOR_CLASSNAME","RX_CODE_SPAN","RX_CODE","RX_BREAK","TypedText","content","line","_match","code","output","pauseDuration","stopAfterwards","shiftContent","start","shiftToOutput","length","addStep","step","nextChar","codeMatch","delimiterPosition","breakMatch","callback","duration","handleEventOnce","element","type","handler","onEvent","INITIAL_CONTENT_CLASS","ADDITIONAL_CONTENT_CLASS","typedText","__vitePreload","CommandPrompt"],"sources":["../../src/lib/color-theme.ts","../../src/components/svg-icon/svg-icon.ts","../../src/components/color-theme-toggle/color-theme-toggle.ts","../../src/components/typed-text/typed-text.ts","../../src/components/index.ts","../../src/lib/handle-event-once.ts","../../src/index.ts"],"sourcesContent":["export enum ColorThemeValue {\n  Light = 'light',\n  Dark = 'dark'\n}\n\nconst DEFAULT_COLOR_THEME_VALUE = ColorThemeValue.Light;\nconst COLOR_THEME_STORAGE_KEY = 'color-theme';\n\nfunction userPrefersColorScheme(scheme: 'light' | 'dark'): boolean {\n  return window.matchMedia(`(prefers-color-scheme: ${scheme})`).matches;\n}\n\nfunction setTheme(theme?: string): void {\n  const themeValues = Object.values(ColorThemeValue);\n  if (!themeValues.includes(theme as ColorThemeValue)) {\n    return;\n  }\n  document.documentElement.dataset.colorTheme = theme;\n  window.localStorage.setItem(COLOR_THEME_STORAGE_KEY, theme as string);\n}\n\nexport const ColorTheme = {\n  initialize(): void {\n    const storedTheme = window.localStorage.getItem(COLOR_THEME_STORAGE_KEY);\n    let theme: string | undefined;\n    if (storedTheme) {\n      theme = storedTheme;\n    } else if (userPrefersColorScheme(ColorThemeValue.Dark)) {\n      theme = ColorThemeValue.Dark;\n    } else if (userPrefersColorScheme(ColorThemeValue.Light)) {\n      theme = ColorThemeValue.Light;\n    } else {\n      theme = DEFAULT_COLOR_THEME_VALUE;\n    }\n    setTheme(theme);\n    window\n      .matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', ({ matches }) => setTheme(matches ? ColorThemeValue.Dark : ColorThemeValue.Light));\n  },\n\n  toggle(): void {\n    setTheme(\n      document.documentElement.dataset.colorTheme === ColorThemeValue.Dark\n        ? ColorThemeValue.Light\n        : ColorThemeValue.Dark\n    );\n  },\n\n  get theme(): string {\n    return (document.documentElement.dataset.colorTheme as ColorThemeValue) || DEFAULT_COLOR_THEME_VALUE;\n  },\n\n  set theme(theme: string) {\n    setTheme(theme);\n  }\n};\n","const SVG_ICON_CACHE = new Map<string, string>();\n\nexport const ICON_NAME_ATTRIBUTE = 'icon-name';\nexport class SvgIcon extends HTMLElement {\n  public static observedAttributes = [ICON_NAME_ATTRIBUTE];\n\n  public constructor() {\n    super();\n  }\n\n  public attributeChangedCallback(attribute: string, _oldValue: string, value: string): void {\n    if (attribute === ICON_NAME_ATTRIBUTE) {\n      this.setIcon(value);\n    }\n  }\n\n  private setIcon(iconName: string) {\n    if (typeof iconName !== 'string' || iconName.length === 0) {\n      return;\n    }\n    this.getIcon(iconName).then(svg => {\n      this.innerHTML = svg;\n    });\n  }\n\n  private async getIcon(iconName: string): Promise<string> {\n    if (!SVG_ICON_CACHE.has(iconName)) {\n      const { default: importedIcon } = await import(`./svg-icons/${iconName}.ts`);\n      SVG_ICON_CACHE.set(iconName, importedIcon);\n    }\n    const icon = SVG_ICON_CACHE.get(iconName) as string;\n    return icon;\n  }\n}\n","import { ColorTheme, ColorThemeValue } from '../../lib/color-theme';\nimport { ICON_NAME_ATTRIBUTE, SvgIcon } from '../svg-icon/svg-icon';\n\nexport class ColorThemeToggle extends HTMLElement {\n  private svgIcon!: SvgIcon;\n\n  public connectedCallback(): void {\n    const button = document.createElement('button') as HTMLButtonElement;\n    button.setAttribute('title', 'Toggle Color Theme');\n    button.addEventListener('click', (event: Event) => {\n      event.preventDefault();\n      ColorTheme.toggle();\n    });\n\n    this.svgIcon = document.createElement('svg-icon') as SvgIcon;\n    this.svgIcon.classList.add('as-block');\n\n    this.setIconNameByColorTheme();\n\n    const observer = new MutationObserver(() => this.setIconNameByColorTheme());\n    observer.observe(document.documentElement, {\n      attributeFilter: ['data-color-theme']\n    });\n\n    this.append(button);\n    button.append(this.svgIcon);\n  }\n\n  private setIconNameByColorTheme(): void {\n    const colorTheme = document.documentElement.dataset.colorTheme as string;\n    const iconName = {\n      [ColorThemeValue.Light]: 'moon',\n      [ColorThemeValue.Dark]: 'sun'\n    }[colorTheme];\n    if (iconName && iconName.length > 0) {\n      this.svgIcon.setAttribute(ICON_NAME_ATTRIBUTE, iconName as string);\n    }\n  }\n}\n","interface Step {\n  pauseDuration: number;\n  output: string;\n  stopAfterwards?: boolean;\n}\n\nexport const STOPPED_TYPING_EVENT_NAME = 'stopped-typing';\nexport const STARTED_TYPING_EVENT_NAME = 'started-typing';\n\nconst DEFAULT_TYPE_DELAY = 23;\n\nconst HAS_CURSOR_CLASSNAME = 'has-cursor';\n\nconst RX_CODE_SPAN = /<span\\s+code=\"(\\d+|stop)\"[^>]*><\\/span>/gi;\nconst RX_CODE = /^\\^(\\d+|stop)/i;\nconst RX_BREAK = /^<br\\s*\\/?>/i;\n\nexport class TypedText extends HTMLElement {\n  // queue of text/html strings to set as innerHtml\n  private steps: Step[] = [];\n\n  // next output queue index\n  private nextStep = 0;\n\n  // base pause duration between each typed character\n  private typeDelay!: number;\n\n  // timeout reference for pause timeout\n  private typeTimeout = 0;\n\n  public constructor() {\n    super();\n  }\n\n  public connectedCallback(): void {\n    this.typeDelay = Number.parseInt(this.getAttribute('type-delay') || '0', 10) || DEFAULT_TYPE_DELAY;\n    const content = this.innerHTML;\n    this.innerHTML = '';\n    this.queueContent(content);\n    this.startTyping();\n  }\n\n  public startTyping(): void {\n    this.classList.add(HAS_CURSOR_CLASSNAME);\n    this.dispatchEvent(new CustomEvent(STARTED_TYPING_EVENT_NAME));\n    this.type();\n  }\n\n  public stopTyping(): void {\n    this.clearTimeout();\n    this.classList.remove(HAS_CURSOR_CLASSNAME);\n    this.dispatchEvent(new CustomEvent(STOPPED_TYPING_EVENT_NAME));\n  }\n\n  public resetTyping(): void {\n    this.stopTyping();\n    this.nextStep = 0;\n    this.innerHTML = '';\n  }\n\n  public restartTyping(): void {\n    this.resetTyping();\n    this.startTyping();\n  }\n\n  public get isTyping(): boolean {\n    return this.typeTimeout !== 0;\n  }\n\n  public get typingDone(): boolean {\n    return this.steps.length === this.nextStep;\n  }\n\n  public queueContent(content: string): void {\n    content = content\n      .split(/[\\n\\r]+/g)\n      .map(line => line.trim())\n      .join('')\n      .replaceAll(RX_CODE_SPAN, (_match, code) => `^${code}`);\n\n    let output = this.steps.at(-1)?.output || '';\n    let pauseDuration = 0;\n    let stopAfterwards = false;\n\n    const shiftContent = (start: number): void => {\n      content = content.slice(start);\n    };\n\n    const shiftToOutput = (length: number): void => {\n      output += content.slice(0, length);\n      shiftContent(length);\n    };\n\n    const addStep = () => {\n      const step: Step = { pauseDuration, output };\n      if (stopAfterwards) {\n        step.stopAfterwards = stopAfterwards;\n      }\n      this.steps.push(step);\n      pauseDuration = 0;\n      stopAfterwards = false;\n    };\n\n    while (content.length > 0) {\n      const nextChar = content.charAt(0);\n      let codeMatch: RegExpMatchArray | null = null;\n      let delimiterPosition: number;\n      if (nextChar === '^' && (codeMatch = content.match(RX_CODE))) {\n        if (codeMatch[0].toLowerCase() === '^stop') {\n          stopAfterwards = true;\n        } else {\n          pauseDuration += Number.parseInt(codeMatch[0].slice(1), 10);\n        }\n        shiftContent(codeMatch[0].length);\n      } else if (nextChar === '<') {\n        let breakMatch: RegExpMatchArray | null = null;\n        if ((breakMatch = content.match(RX_BREAK))) {\n          shiftToOutput(breakMatch[0].length);\n          addStep();\n        } else if ((delimiterPosition = content.indexOf('>')) >= 0) {\n          shiftToOutput(delimiterPosition + 1);\n        }\n      } else if (nextChar === '&' && (delimiterPosition = content.indexOf(';')) >= 0) {\n        shiftToOutput(delimiterPosition + 1);\n      } else {\n        shiftToOutput(1);\n        addStep();\n      }\n    }\n  }\n\n  private type(): void {\n    const step = this.steps[this.nextStep];\n    this.setTimeout(() => {\n      this.innerHTML = step.output;\n      this.nextStep++;\n      if (!step.stopAfterwards && this.nextStep < this.steps.length) {\n        this.setTimeout(() => this.type(), this.humanizedDelay);\n      } else {\n        this.stopTyping();\n      }\n    }, step.pauseDuration);\n  }\n\n  private get humanizedDelay(): number {\n    return (Math.random() * this.typeDelay - Math.random() * this.typeDelay) / 2 + this.typeDelay;\n  }\n\n  private setTimeout(callback: () => void, duration = 0): void {\n    this.typeTimeout = window.setTimeout(callback, duration);\n  }\n\n  private clearTimeout(): void {\n    if (this.typeTimeout) {\n      window.clearTimeout(this.typeTimeout);\n      this.typeTimeout = 0;\n    }\n  }\n}\n","import { ColorThemeToggle } from './color-theme-toggle/color-theme-toggle';\nimport { SvgIcon } from './svg-icon/svg-icon';\nimport { TypedText } from './typed-text/typed-text';\n\ncustomElements.define('svg-icon', SvgIcon);\ncustomElements.define('typed-text', TypedText);\ncustomElements.define('color-theme-toggle', ColorThemeToggle);\n","export function handleEventOnce(element: HTMLElement, type: string, handler: (event: Event) => void): void {\n  const onEvent = (event: Event) => {\n    element.removeEventListener(type, onEvent);\n    handler(event);\n  };\n  element.addEventListener(type, onEvent);\n}\n","import './index.scss';\nimport './components';\n\nimport { STOPPED_TYPING_EVENT_NAME, TypedText } from './components/typed-text/typed-text';\nimport { ColorTheme } from './lib/color-theme';\nimport { handleEventOnce } from './lib/handle-event-once';\n\nColorTheme.initialize();\n\nconst INITIAL_CONTENT_CLASS = 'has-initial-content';\nconst ADDITIONAL_CONTENT_CLASS = 'has-additional-content';\n\nconst typedText = document.querySelector('typed-text') as TypedText;\n\nhandleEventOnce(typedText, STOPPED_TYPING_EVENT_NAME, () => {\n  typedText.classList.add(INITIAL_CONTENT_CLASS);\n});\n\ntypedText.addEventListener('click', (event: Event) => {\n  if ((event.target as HTMLElement).tagName === 'BUTTON') {\n    event.preventDefault();\n    if (typedText.classList.contains(INITIAL_CONTENT_CLASS)) {\n      typedText.classList.add(ADDITIONAL_CONTENT_CLASS);\n      typedText.classList.remove(INITIAL_CONTENT_CLASS);\n      typedText.startTyping();\n    }\n  }\n});\n\nimport('./components/command-prompt/command-prompt').then(({ CommandPrompt }) => {\n  customElements.define('command-prompt', CommandPrompt);\n  typedText.after(document.createElement('command-prompt'));\n});\n"],"file":"assets/index-pD3U_8-_.js"}